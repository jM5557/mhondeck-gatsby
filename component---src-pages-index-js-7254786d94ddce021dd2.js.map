{"version":3,"file":"component---src-pages-index-js-7254786d94ddce021dd2.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/GridImage.js","webpack://gatsby-starter-default/./src/components/GridImages.js","webpack://gatsby-starter-default/./src/components/footer.js","webpack://gatsby-starter-default/./src/components/header.js","webpack://gatsby-starter-default/./src/components/seo.js","webpack://gatsby-starter-default/./src/images/bg.jpg","webpack://gatsby-starter-default/./src/images/home/hero-shot.png","webpack://gatsby-starter-default/./src/pages/index.js","webpack://gatsby-starter-default/./src/images/logo.svg"],"sourcesContent":["import React from \"react\";\r\n\r\nconst GridImage = ({ gameData, id, className = \"\", renderTagType = \"img\" }) => {\r\n    const findGridImage = (folderData, folderPath) => {\r\n        if (gameData?.grid && gameData.grid.length > 0) {\r\n            return {\r\n                image: gameData.grid[0],\r\n                path: `/images/gallery/${id}/${gameData.grid[0]}`\r\n            };\r\n        }\r\n\r\n        for (const subfolder of Object.keys(folderData ?? {})) {\r\n            if (typeof folderData[subfolder] === \"object\" && !Array.isArray(folderData[subfolder])) {\r\n                if (folderData[subfolder].grid && folderData[subfolder].grid.length > 0) {\r\n                    return {\r\n                        image: folderData[subfolder].grid[0],\r\n                        path: `/images/gallery/${folderPath}/${subfolder}/${folderData[subfolder].grid[0]}`\r\n                    };\r\n                }\r\n\r\n                const nestedGridImage = findGridImage(folderData[subfolder], `${folderPath}/${subfolder}`);\r\n                if (nestedGridImage) {\r\n                    return nestedGridImage;\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n\r\n    const gridData = findGridImage(gameData, id);\r\n    const gridPath = gridData ? gridData.path : null;\r\n\r\n    if (renderTagType !== \"img\")\r\n        return <div\r\n            className={className}\r\n            style={gridPath ? {\r\n                backgroundImage: `url(${gridPath})`,\r\n                backgroundSize: 'cover'\r\n            } : {}}\r\n        >\r\n        </div>\r\n    else <img\r\n        src={gridPath ? {\r\n            backgroundImage: `url(${gridPath})`,\r\n            backgroundSize: 'cover'\r\n        } : {}}\r\n        className={className}\r\n    />\r\n}\r\n\r\n        export default GridImage;","import React from \"react\";\r\nimport artwork from \"@data/output.json\";\r\nimport GridImage from \"./GridImage\";\r\n\r\nconst GridImages = ({ games }) => (\r\n    <>\r\n    {\r\n        games.map(([key, game], index) => {\r\n            const gameData = artwork[key];\r\n            const id = key;\r\n\r\n            return (\r\n                <a key={index} href={`/games/${id}`} className=\"game-thumb\">\r\n                    <GridImage\r\n                        gameData={gameData}\r\n                        id={id}\r\n                        className=\"img-wrapper\"\r\n                        renderTagType=\"div\"\r\n                    />\r\n                    <small>\r\n                        {game.title}\r\n                    </small>\r\n                </a>\r\n            )\r\n        }\r\n        )\r\n    }\r\n    </>\r\n)\r\n\r\nexport default GridImages;","import React from \"react\";\r\nimport logo from \"@images/logo.svg\";\r\n\r\nconst Footer = () => (\r\n    <footer id=\"site-footer\">\r\n        <ul>\r\n            <li><a href=\"https://reddit.com/u/jM5557\">Reddit</a></li>\r\n            <li><a href=\"https://www.youtube.com/@MHOnDeck\">YouTube</a></li>\r\n            <li><a href=\"mailto:mhondeck.site@gmail.com\">Email</a></li>\r\n        </ul>\r\n        <img alt=\"Footer Logo\" src={logo} id=\"footer-logo\" />\r\n        <ul>\r\n            <li><a href=\"/faq\">FAQ</a></li>\r\n            <li><a href=\"/resources\">Resources</a></li>\r\n            <li><a href=\"https://store.steampowered.com\">Steam</a></li>\r\n        </ul>\r\n    </footer>\r\n)\r\n\r\nexport default Footer;","import * as React from \"react\";\r\nimport logo from \"@images/logo.svg\";\r\n\r\nconst Header = () => (\r\n  <nav id=\"top-nav\" className=\"flex space-b align-c\">\r\n    <a href=\"/\" id=\"main-logo\">\r\n      <img alt=\"MHOnDeck Logo\" src={logo} />\r\n      <span className=\"hidden\">MHOnDeck</span>\r\n    </a>\r\n    <div className=\"submenu flex space-b align-c\">\r\n      <li><a href=\"/games\">Games</a></li>\r\n      <li><a href=\"/videos\">Videos</a></li>\r\n      <li><a href=\"/ui/theme\">UI Theme</a></li>\r\n    </div>\r\n  </nav>\r\n)\r\n\r\nexport default Header\r\n","/**\r\n * SEO component that queries for data with\r\n * Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\r\n */\r\n\r\nimport * as React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nfunction Seo({ description, title, children }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n  const defaultTitle = site.siteMetadata?.title\r\n\r\n  return (\r\n    <>\r\n      <title>{defaultTitle ? `${defaultTitle} | ${title}` : title}</title>\r\n      <meta name=\"description\" content={metaDescription} />\r\n      <meta property=\"og:title\" content={title} />\r\n      <meta property=\"og:description\" content={metaDescription} />\r\n      <meta property=\"og:type\" content=\"website\" />\r\n      <meta name=\"twitter:card\" content=\"summary\" />\r\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\r\n      <meta name=\"twitter:title\" content={title} />\r\n      <meta name=\"twitter:description\" content={metaDescription} />\r\n      {children}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Seo\r\n","export default __webpack_public_path__ + \"static/bg-9e5ceaf1d451865aaf23213321d779e9.jpg\";","export default __webpack_public_path__ + \"static/hero-shot-28572d1290bd6f5f889b1f929d59b703.png\";","import React from \"react\"\r\nimport \"@styles/main.scss\"\r\nimport heroBg from \"@images/bg.jpg\"\r\nimport heroshot from \"@images/home/hero-shot.png\"\r\nimport Footer from \"../components/footer\"\r\nimport Header from \"../components/header\"\r\nimport games from \"@data/games.json\"\r\nimport GridImages from \"../components/GridImages\"\r\nimport Seo from \"../components/seo\"\r\n\r\nexport default function Home() {\r\n  const getRandomEntries = (array) => {\r\n    const randomIndexes = [];\r\n\r\n    // Generate 4 unique random indexes\r\n    while (randomIndexes.length < 4) {\r\n      const randomIndex = Math.floor(Math.random() * array.length);\r\n      if (!randomIndexes.includes(randomIndex)) {\r\n        randomIndexes.push(randomIndex);\r\n      }\r\n    }\r\n\r\n    // Return the array elements at those indexes\r\n    return randomIndexes.map(index => array[index]);\r\n  }\r\n\r\n  const _games = getRandomEntries(Object.entries(games));\r\n\r\n  return (\r\n    <main>\r\n      <section id=\"hero\">\r\n        <Header />\r\n        <div id=\"featured-wrapper\">\r\n          <div id=\"featured\">\r\n            <h1>Monster Hunter UI Theme</h1>\r\n            <h2>For Steam</h2>\r\n            <a href = \"/ui/theme\" className=\"cta\">Get Started</a>\r\n          </div>\r\n          <img alt=\"UI Theme\" src={heroshot} className=\"hero-shot\" />\r\n        </div>\r\n      </section>\r\n\r\n      <section id=\"games\">\r\n        <h5>New</h5>\r\n        <h3>Steam Grid Artwork</h3>\r\n        <div className=\"flex space-s align-s\">\r\n          <GridImages games={_games} />\r\n          <a href=\"/games\" className=\"cta secondary\">See All</a>\r\n        </div>\r\n      </section>\r\n\r\n      <section id=\"videos\">\r\n        <div className=\"preview\">\r\n          <div className=\"thumb\">\r\n            <img alt=\"Preview thumbnail\" src={heroBg} />\r\n          </div>\r\n          <div className=\"description\">\r\n            <h5>Featured</h5>\r\n            <h3>Bootup Videos</h3>\r\n            <h4>for Steam</h4>\r\n            <a href=\"/videos\" className=\"cta\">Browse</a>\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n      <Footer />\r\n\r\n      <Seo title = \"Monster Hunter UI Theme for Steam & More\" />\r\n    </main>\r\n  )\r\n}\r\n","export default __webpack_public_path__ + \"static/logo-c32ff40a348958412acb39b922cc9e08.svg\";"],"names":["gameData","id","className","renderTagType","findGridImage","folderData","folderPath","grid","length","image","path","subfolder","Object","keys","Array","isArray","nestedGridImage","gridData","gridPath","style","backgroundImage","backgroundSize","games","map","index","key","game","artwork","href","title","alt","src","logo","description","children","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","name","content","property","author","Home","_games","array","randomIndexes","randomIndex","Math","floor","random","includes","push","getRandomEntries","entries","heroshot","GridImages","heroBg"],"sourceRoot":""}