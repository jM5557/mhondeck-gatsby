{"version":3,"file":"component---src-pages-games-index-js-f9764f32781ed7cb6f7c.js","mappings":"gKAkDQ,MAhDU,IAA8D,IAA7D,SAAEA,EAAQ,GAAEC,EAAE,UAAEC,EAAY,GAAE,cAAEC,EAAgB,OAAO,EACtE,MAAMC,EAAgB,CAACC,EAAYC,KAC/B,GAAIN,SAAAA,EAAUO,MAAQP,EAASO,KAAKC,OAAS,EACzC,MAAO,CACHC,MAAOT,EAASO,KAAK,GACrBG,KAAK,mBAAoBT,EAAE,IAAID,EAASO,KAAK,IAIrD,IAAK,MAAMI,KAAaC,OAAOC,KAAKR,QAAAA,EAAc,CAAC,GAC/C,GAAqC,iBAA1BA,EAAWM,KAA4BG,MAAMC,QAAQV,EAAWM,IAAa,CACpF,GAAIN,EAAWM,GAAWJ,MAAQF,EAAWM,GAAWJ,KAAKC,OAAS,EAClE,MAAO,CACHC,MAAOJ,EAAWM,GAAWJ,KAAK,GAClCG,KAAK,mBAAoBJ,EAAU,IAAIK,EAAS,IAAIN,EAAWM,GAAWJ,KAAK,IAIvF,MAAMS,EAAkBZ,EAAcC,EAAWM,GAAeL,EAAU,IAAIK,GAC9E,GAAIK,EACA,OAAOA,CAEf,CAEJ,OAAO,IAAI,EAGTC,EAAWb,EAAcJ,EAAUC,GACnCiB,EAAWD,EAAWA,EAASP,KAAO,KAE5C,GAAsB,QAAlBP,EACA,OAAO,uBACHD,UAAWA,EACXiB,MAAOD,EAAW,CACdE,gBAAgB,OAAQF,EAAQ,IAChCG,eAAgB,SAChB,CAAC,GASX,ECjBN,MA1BmB,QAAC,MAAEC,GAAO,SACzB,gCAEIA,EAAMC,KAAI,CAAC,EAAaC,KAAW,IAAvBC,EAAKC,GAAK,EAClB,MAAM1B,EAAW2B,EAAQF,GACnBxB,EAAKwB,EAEX,OACI,qBAAGA,IAAKD,EAAOI,KAAI,UAAY3B,EAAMC,UAAU,cAC3C,gBAAC,EAAS,CACNF,SAAUA,EACVC,GAAIA,EACJC,UAAU,cACVC,cAAc,QAElB,6BACKuB,EAAKG,OAEV,IAKb,C,oIC8DP,UA9EkB,KACd,IAAI,UACAC,EAAS,aACTC,EAAY,eACZC,IACAC,EAAAA,EAAAA,KAEJ,MACIH,UAAWI,EACXH,aAAcI,EACdH,eAAgBI,IACdH,EAAAA,EAAAA,MAEA,EAACI,EAAW,EAACC,IAAiBC,EAAAA,EAAAA,UAAS,IAEvCC,EAAe5B,OAAO6B,QAAQnB,GAAOoB,QAAO,QAAEjB,EAAKC,GAAK,SAC5DA,EAAKG,MAAMc,cAAcC,SAASP,EAAWM,gBACxClB,EAAIkB,cAAcC,SAASP,EAAWM,cAAc,IAGrDE,EAAOL,EAAahC,OAAS,EAC7BgC,EACA5B,OAAO6B,QAAQnB,IAEf,IACFwB,EAAG,MACHjB,EAAK,SACLkB,GACAC,EAAAA,MAEJ,OACI,wBAAM9C,UAAU,2BACZ,2BAASD,GAAG,OAAOC,UAAU,IACzB,gBAAC,IAAM,MACP,0BAAI,sBACJ,0BAAI,uEACJ,0BACI+C,KAAK,SACLC,QAAS,IAAMf,GAAkBD,GACjChC,UAAU,OACb,iBAGD,0BACI+C,KAAK,SACLC,QAAS,IAAMnB,GAAcD,GAC7B5B,UAAU,iBACb,iBAIL,yBACI+C,KAAK,OACLE,YAAY,kBACZC,MAAOf,EACPnC,UAAU,SACVmD,SAAWC,GAAMhB,EAAcgB,EAAEC,OAAOH,SAE5C,2BAASnD,GAAG,cACR,gBAAC,IAAU,CAACqB,MAAOuB,KAEvB,gBAACb,EAAc,KACX,gBAAC,IAAwB,OAG7B,gBAACI,EAAsB,KACnB,gBAAC,IAAc,CACXoB,aAAcV,EACdjB,MAASA,EACTkB,SAAUA,KAGlB,gBAAC,IAAM,MACP,gBAAC,IAAG,CAAClB,MAAQ,mCACV,C","sources":["webpack://MHOnDeck/./src/components/GridImage.js","webpack://MHOnDeck/./src/components/GridImages.js","webpack://MHOnDeck/./src/pages/games/index.js"],"sourcesContent":["import React from \"react\";\r\n\r\nconst GridImage = ({ gameData, id, className = \"\", renderTagType = \"img\" }) => {\r\n    const findGridImage = (folderData, folderPath) => {\r\n        if (gameData?.grid && gameData.grid.length > 0) {\r\n            return {\r\n                image: gameData.grid[0],\r\n                path: `/images/gallery/${id}/${gameData.grid[0]}`\r\n            };\r\n        }\r\n\r\n        for (const subfolder of Object.keys(folderData ?? {})) {\r\n            if (typeof folderData[subfolder] === \"object\" && !Array.isArray(folderData[subfolder])) {\r\n                if (folderData[subfolder].grid && folderData[subfolder].grid.length > 0) {\r\n                    return {\r\n                        image: folderData[subfolder].grid[0],\r\n                        path: `/images/gallery/${folderPath}/${subfolder}/${folderData[subfolder].grid[0]}`\r\n                    };\r\n                }\r\n\r\n                const nestedGridImage = findGridImage(folderData[subfolder], `${folderPath}/${subfolder}`);\r\n                if (nestedGridImage) {\r\n                    return nestedGridImage;\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n\r\n    const gridData = findGridImage(gameData, id);\r\n    const gridPath = gridData ? gridData.path : null;\r\n\r\n    if (renderTagType !== \"img\")\r\n        return <div\r\n            className={className}\r\n            style={gridPath ? {\r\n                backgroundImage: `url(${gridPath})`,\r\n                backgroundSize: 'cover'\r\n            } : {}}\r\n        >\r\n        </div>\r\n    else <img\r\n        src={gridPath ? {\r\n            backgroundImage: `url(${gridPath})`,\r\n            backgroundSize: 'cover'\r\n        } : {}}\r\n        className={className}\r\n    />\r\n}\r\n\r\n        export default GridImage;","import React from \"react\";\r\nimport artwork from \"@data/output.json\";\r\nimport GridImage from \"./GridImage\";\r\n\r\nconst GridImages = ({ games }) => (\r\n    <>\r\n    {\r\n        games.map(([key, game], index) => {\r\n            const gameData = artwork[key];\r\n            const id = key;\r\n\r\n            return (\r\n                <a key={index} href={`/games/${id}`} className=\"game-thumb\">\r\n                    <GridImage\r\n                        gameData={gameData}\r\n                        id={id}\r\n                        className=\"img-wrapper\"\r\n                        renderTagType=\"div\"\r\n                    />\r\n                    <small>\r\n                        {game.title}\r\n                    </small>\r\n                </a>\r\n            )\r\n        }\r\n        )\r\n    }\r\n    </>\r\n)\r\n\r\nexport default GridImages;","import React, { useState } from \"react\"\r\nimport Header from \"@components/header\";\r\nimport GridImages from \"@components/GridImages\";\r\nimport Footer from \"@components/footer\";\r\nimport { UseModal } from \"@components/Modals\";\r\nimport games from \"@data/games\";\r\nimport releases from \"@data/releases.json\";\r\nimport SteamGridArtInstallation from \"@content/SteamGridArtInstallation\";\r\nimport DownloadWindow from \"../../components/DownloadWindow\";\r\nimport Seo from \"../../components/seo\";\r\n\r\nconst GamesPage = () => {\r\n    let {\r\n        showModal,\r\n        setShowModal,\r\n        ModalComponent\r\n    } = UseModal();\r\n\r\n    const { \r\n        showModal: downloadModal, \r\n        setShowModal: setDownloadModal, \r\n        ModalComponent: DownloadModalComponent \r\n      } = UseModal();\r\n\r\n    const [searchTerm, setSearchTerm] = useState(\"\");\r\n\r\n    const filteredList = Object.entries(games).filter(([key, game]) =>\r\n      game.title.toLowerCase().includes(searchTerm.toLowerCase())\r\n        || key.toLowerCase().includes(searchTerm.toLowerCase())\r\n    );\r\n\r\n    const list = filteredList.length > 0 \r\n        ? filteredList \r\n        : Object.entries(games);\r\n\r\n    const {\r\n        url,\r\n        title,\r\n        fileSize\r\n    } = releases.games;\r\n\r\n    return (\r\n        <main className=\"game-page standard-page\">\r\n            <section id=\"hero\" className=\"\">\r\n                <Header />\r\n                <h1>Steam Grid Artwork</h1>\r\n                <h2>Choose a game to view its SteamOS or Steam Big Picture mode artwork</h2>\r\n                <button\r\n                    type=\"button\"\r\n                    onClick={() => setDownloadModal(!downloadModal)}\r\n                    className=\"cta\"\r\n                >\r\n                    Download Pack\r\n                </button>\r\n                <button\r\n                    type=\"button\"\r\n                    onClick={() => setShowModal(!showModal)}\r\n                    className=\"cta secondary\"\r\n                >\r\n                    Installation\r\n                </button>\r\n            </section>\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Search Games...\"\r\n                value={searchTerm}\r\n                className=\"search\"\r\n                onChange={(e) => setSearchTerm(e.target.value)}\r\n            />\r\n            <section id=\"games-list\">\r\n                <GridImages games={list} />\r\n            </section>\r\n            <ModalComponent>\r\n                <SteamGridArtInstallation />\r\n            </ModalComponent>\r\n            \r\n            <DownloadModalComponent>\r\n                <DownloadWindow\r\n                    downloadLink={url}\r\n                    title = {title}\r\n                    fileSize={fileSize}\r\n                />\r\n            </DownloadModalComponent>\r\n            <Footer />\r\n            <Seo title = \"Steam Grid Artwork - All Games\" />\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default GamesPage;"],"names":["gameData","id","className","renderTagType","findGridImage","folderData","folderPath","grid","length","image","path","subfolder","Object","keys","Array","isArray","nestedGridImage","gridData","gridPath","style","backgroundImage","backgroundSize","games","map","index","key","game","artwork","href","title","showModal","setShowModal","ModalComponent","UseModal","downloadModal","setDownloadModal","DownloadModalComponent","searchTerm","setSearchTerm","useState","filteredList","entries","filter","toLowerCase","includes","list","url","fileSize","releases","type","onClick","placeholder","value","onChange","e","target","downloadLink"],"sourceRoot":""}